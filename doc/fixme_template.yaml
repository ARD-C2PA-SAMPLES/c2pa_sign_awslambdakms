Transform: AWS::Serverless-2016-10-31
Resources:
  FunctionC2PASign:
    Type: AWS::Serverless::Function
    Properties:
      Description: !Sub
        - Stack ${AWS::StackName} Function ${ResourceName}
        - ResourceName: FunctionC2PASign
      CodeUri: lambda_c2pasign/
      Handler: lambda_c2pasign::c2panalyze2.Function::FunctionHandlerSign
      Runtime: dotnet8
      MemorySize: 3008
      Timeout: 600
      Tracing: Active
      Events:
        BucketC2PASign:
          Type: S3
          Properties:
            Bucket: !Ref BucketC2PASign
            Events:
              - s3:ObjectCreated:*
  FunctionC2PASignLogGroup:
    Type: AWS::Logs::LogGroup
    DeletionPolicy: Retain
    Properties:
      LogGroupName: !Sub /aws/lambda/${FunctionC2PASign}
  BucketC2PASign:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub ${AWS::StackName}-bucketc2p-${AWS::AccountId}
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: aws:kms
              KMSMasterKeyID: alias/aws/s3
      PublicAccessBlockConfiguration:
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
  BucketC2PASignBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref BucketC2PASign
      PolicyDocument:
        Id: RequireEncryptionInTransit
        Version: '2012-10-17'
        Statement:
          - Principal: '*'
            Action: '*'
            Effect: Deny
            Resource:
              - !GetAtt BucketC2PASign.Arn
              - !Sub ${BucketC2PASign.Arn}/*
            Condition:
              Bool:
                aws:SecureTransport: 'false'
  RolePolicy:
    Type: AWS::IAM::RolePolicy
    Properties:
      RoleName: <String>
      PolicyName: <String>
  Role:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument: <Json>